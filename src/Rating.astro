---
import default_enabled_src from './imgs/star.webp';
import default_disabled_src from './imgs/star_disabled.webp';

export interface Props {
    total?: number|string;
    max?: number|string;
    rate?: number|string;
    enabled_src?: string;
    disabled_src?: string;
}

const { 
    total,
    max = 5,
    rate = 0,
    enabled_src,
    disabled_src
} = Astro.props as Props;

const disabled = +max - +rate;

function addCommas(num) {
    if (typeof num == 'number') return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",")
    if (typeof num == 'string') return num.replace(/\B(?=(\d{3})+(?!\d))/g, ",")
    return "0"
}
---

<style lang="scss">
    .rating-container {
        display: flex;
        align-items: flex-end;
        gap: 0.25rem;

        .total-ratings {
            font-size: 0.75rem;
            color: #ccc;
        }
        .rating-stars {
            display: flex;
            align-items: flex-end;
            
            img {
                height: 14px;
                width: auto;
            }
        }
    }
</style>

<div class="rating-container">
    { total &&
        <span class="total-ratings">({addCommas(total)})</span>
    }
    <div class="rating-stars">
        { [...Array(+rate)].map(() => {
            if (enabled_src) return <img src={enabled_src}>
            else return <img src={default_enabled_src}>
        })}
        {   disabled != 0 &&
            [...Array(disabled)].map(() => {
                if (disabled_src) return <img src={disabled_src}>
                else return <img src={default_disabled_src}>
            })
        }
    </div>
</div>
